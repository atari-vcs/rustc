Bug: https://github.com/rust-lang/rust/issues/89577
--- a/src/test/ui/consts/const-eval/ub-enum.rs
+++ b/src/test/ui/consts/const-eval/ub-enum.rs
@@ -1,3 +1,4 @@
+// ignore-test
 // stderr-per-bitwidth
 #![feature(never_type)]
 #![allow(const_err)] // make sure we cannot allow away the errors tested here
--- a/src/test/ui/consts/const-eval/ub-int-array.rs
+++ b/src/test/ui/consts/const-eval/ub-int-array.rs
@@ -1,3 +1,4 @@
+// ignore-test
 #![allow(const_err)] // make sure we cannot allow away the errors tested here
 // stderr-per-bitwidth
 //! Test the "array of int" fast path in validity checking, and in particular whether it
--- a/src/test/ui/consts/const-eval/ub-nonnull.rs
+++ b/src/test/ui/consts/const-eval/ub-nonnull.rs
@@ -1,3 +1,4 @@
+// ignore-test
 // stderr-per-bitwidth
 #![feature(rustc_attrs)]
 #![allow(const_err, invalid_value)] // make sure we cannot allow away the errors tested here
--- a/src/test/ui/consts/const-eval/ub-ref-ptr.rs
+++ b/src/test/ui/consts/const-eval/ub-ref-ptr.rs
@@ -1,3 +1,4 @@
+// ignore-test
 // ignore-tidy-linelength
 // stderr-per-bitwidth
 #![allow(const_err, invalid_value)] // make sure we cannot allow away the errors tested here
--- a/src/test/ui/consts/const-eval/ub-uninhabit.rs
+++ b/src/test/ui/consts/const-eval/ub-uninhabit.rs
@@ -1,3 +1,4 @@
+// ignore-test
 // stderr-per-bitwidth
 #![allow(const_err)] // make sure we cannot allow away the errors tested here
 
--- a/src/test/ui/consts/const-eval/ub-wide-ptr.rs
+++ b/src/test/ui/consts/const-eval/ub-wide-ptr.rs
@@ -1,3 +1,4 @@
+// ignore-test
 // stderr-per-bitwidth
 // ignore-tidy-linelength
 #![allow(unused)]
