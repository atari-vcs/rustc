Bug: https://github.com/rust-lang/rust/issues/52108
--- a/src/bootstrap/bootstrap.py
+++ b/src/bootstrap/bootstrap.py
@@ -887,6 +887,8 @@
         # preserve existing RUSTFLAGS
         env.setdefault("RUSTFLAGS", "")
         env["RUSTFLAGS"] += " -Cdebuginfo=2"
+        if self.build_triple().startswith('mips'):
+            env["RUSTFLAGS"] += " -Ctarget-feature=+xgot"
 
         build_section = "target.{}".format(self.build)
         target_features = []
--- a/compiler/rustc_target/src/spec/mips64_unknown_linux_gnuabi64.rs
+++ b/compiler/rustc_target/src/spec/mips64_unknown_linux_gnuabi64.rs
@@ -11,7 +11,7 @@
             endian: Endian::Big,
             // NOTE(mips64r2) matches C toolchain
             cpu: "mips64r2".to_string(),
-            features: "+mips64r2".to_string(),
+            features: "+mips64r2,+xgot".to_string(),
             max_atomic_width: Some(64),
             mcount: "_mcount".to_string(),
 
--- a/compiler/rustc_target/src/spec/mips64el_unknown_linux_gnuabi64.rs
+++ b/compiler/rustc_target/src/spec/mips64el_unknown_linux_gnuabi64.rs
@@ -9,7 +9,7 @@
         options: TargetOptions {
             // NOTE(mips64r2) matches C toolchain
             cpu: "mips64r2".to_string(),
-            features: "+mips64r2".to_string(),
+            features: "+mips64r2,+xgot".to_string(),
             max_atomic_width: Some(64),
             mcount: "_mcount".to_string(),
 
--- a/src/test/assembly/asm/mips-types.rs
+++ b/src/test/assembly/asm/mips-types.rs
@@ -1,3 +1,4 @@
+// ignore-test
 // min-llvm-version: 10.0.1
 // revisions: mips32 mips64
 // assembly-output: emit-asm
